
server.port = 8180

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=myGroup

#spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.value.default.type=com.example.Invoice
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.example,org.acme
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer2
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer2
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.listener.missing-topics-fatal=false

kafka.bootstrapAddress=localhost:9092
message.topic.name=test
#greeting.topic.name=greeting
#filtered.topic.name=filtered
#partitioned.topic.name=partitioned
